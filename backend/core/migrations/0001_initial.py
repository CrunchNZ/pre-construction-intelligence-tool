# Generated by Django 5.2.5 on 2025-08-19 04:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('company_type', models.CharField(choices=[('general_contractor', 'General Contractor'), ('subcontractor', 'Subcontractor'), ('material_supplier', 'Material Supplier'), ('equipment_rental', 'Equipment Rental'), ('consultant', 'Consultant'), ('other', 'Other')], max_length=20)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('insurance_info', models.TextField(blank=True)),
                ('certifications', models.JSONField(blank=True, default=list)),
                ('overall_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('reliability_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('quality_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cost_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('source_system', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('project_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('infrastructure', 'Infrastructure'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('bidding', 'Bidding'), ('execution', 'Execution'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('estimated_duration_days', models.IntegerField(blank=True, null=True)),
                ('estimated_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('actual_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('cost_variance', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('cost_variance_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('square_footage', models.IntegerField(blank=True, null=True)),
                ('floors', models.IntegerField(blank=True, null=True)),
                ('complexity_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('source_system', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_created_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_category', models.CharField(choices=[('cost', 'Cost Risk'), ('schedule', 'Schedule Risk'), ('quality', 'Quality Risk'), ('safety', 'Safety Risk'), ('supply_chain', 'Supply Chain Risk'), ('weather', 'Weather Risk'), ('regulatory', 'Regulatory Risk')], max_length=20)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('probability', models.DecimalField(decimal_places=2, help_text='Risk probability as a percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('impact_score', models.IntegerField(help_text='Risk impact score from 1-10', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('ai_model_version', models.CharField(blank=True, max_length=50)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('factors', models.JSONField(default=list, help_text='Factors contributing to this risk')),
                ('mitigation_strategy', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_mitigated', models.BooleanField(default=False)),
                ('mitigation_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessments', to='core.project')),
            ],
            options={
                'verbose_name': 'Risk Assessment',
                'verbose_name_plural': 'Risk Assessments',
                'ordering': ['-probability', '-impact_score'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(choices=[('cost', 'Cost Data'), ('schedule', 'Schedule Data'), ('quality', 'Quality Data'), ('safety', 'Safety Data'), ('weather', 'Weather Data'), ('supply_chain', 'Supply Chain Data')], max_length=20)),
                ('source_system', models.CharField(max_length=50)),
                ('external_record_id', models.CharField(blank=True, max_length=100)),
                ('data', models.JSONField()),
                ('data_date', models.DateField()),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historical_data', to='core.project')),
            ],
            options={
                'verbose_name': 'Historical Data',
                'verbose_name_plural': 'Historical Data',
                'ordering': ['-data_date', '-created_at'],
                'indexes': [models.Index(fields=['project', 'data_type', 'data_date'], name='core_histor_project_573fc4_idx'), models.Index(fields=['source_system', 'data_date'], name='core_histor_source__eecc75_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProjectSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('backup', 'Backup')], default='primary', max_length=20)),
                ('contract_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('contract_start_date', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('on_time_delivery', models.BooleanField(blank=True, null=True)),
                ('quality_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('cost_variance', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='core.project')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.supplier')),
            ],
            options={
                'verbose_name': 'Project Supplier',
                'verbose_name_plural': 'Project Suppliers',
                'unique_together': {('project', 'supplier')},
            },
        ),
    ]
